{"ast":null,"code":"var _jsxFileName = \"/Users/judyzhang/mywebsite/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Contact from './Components/Options/Contact';\nimport AboutMe from './Components/Options/AboutMe';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport axios from \"axios\";\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport ImageGallery from \"react-image-gallery\";\n\nconst express = require('express');\n\nconst {\n  getAlbum\n} = require('./google-photos');\n\nconst app = express();\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}))), document.getElementById('root')); // START\n// authorize CORS (for demo only)\n// authorize CORS (for demo only)\n\napp.use(function (req, res, next) {\n  const origin = req.headers.origin;\n\n  if (origin) {\n    res.setHeader('Access-Control-Allow-Origin', origin);\n  }\n\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\napp.get('/:id', async function (request, response) {\n  try {\n    const results = await getAlbum(request.params.id);\n    response.json(results);\n  } catch (e) {\n    response.status(500);\n  }\n}); // listen for requests :)\n\nconst listener = app.listen(process.env.PORT, function () {\n  console.log('Your app is listening on port ' + listener.address().port);\n}); // END\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/judyzhang/mywebsite/src/index.js"],"names":["React","ReactDOM","App","Contact","AboutMe","serviceWorker","HashRouter","Router","Switch","Route","axios","ImageGallery","express","require","getAlbum","app","render","document","getElementById","use","req","res","next","origin","headers","setHeader","header","get","request","response","results","params","id","json","e","status","listener","listen","process","env","PORT","console","log","address","port","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,UAAU,IAAIC,MAAvB,EAA+BC,MAA/B,EAAuCC,KAAvC,QAAoD,kBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kDAAP;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAaD,OAAO,CAAC,iBAAD,CAA1B;;AACA,MAAME,GAAG,GAAGH,OAAO,EAAnB;AAGAX,QAAQ,CAACe,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADF,CADF,EAMEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAH,GAAG,CAACI,GAAJ,CAAQ,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/B,QAAMC,MAAM,GAAGH,GAAG,CAACI,OAAJ,CAAYD,MAA3B;;AACA,MAAGA,MAAH,EAAU;AACRF,IAAAA,GAAG,CAACI,SAAJ,CAAc,6BAAd,EAA6CF,MAA7C;AACD;;AACDF,EAAAA,GAAG,CAACK,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAJ,EAAAA,IAAI;AACL,CAPD;AASAP,GAAG,CAACY,GAAJ,CAAQ,MAAR,EAAgB,gBAAeC,OAAf,EAAwBC,QAAxB,EAAkC;AAChD,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMhB,QAAQ,CAACc,OAAO,CAACG,MAAR,CAAeC,EAAhB,CAA9B;AACAH,IAAAA,QAAQ,CAACI,IAAT,CAAcH,OAAd;AACD,GAHD,CAIA,OAAMI,CAAN,EAAS;AACPL,IAAAA,QAAQ,CAACM,MAAT,CAAgB,GAAhB;AACD;AACF,CARD,E,CAUA;;AACA,MAAMC,QAAQ,GAAGrB,GAAG,CAACsB,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAvB,EAA6B,YAAW;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCN,QAAQ,CAACO,OAAT,GAAmBC,IAAlE;AACD,CAFgB,CAAjB,C,CAIA;AAEA;AACA;AACA;;AACAvC,aAAa,CAACwC,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Contact from './Components/Options/Contact';\nimport AboutMe from './Components/Options/AboutMe';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport axios from \"axios\";\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport ImageGallery from \"react-image-gallery\";\nconst express = require('express');\nconst {getAlbum} = require('./google-photos')\nconst app = express();\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// START\n// authorize CORS (for demo only)\n// authorize CORS (for demo only)\napp.use(function(req, res, next) {\n  const origin = req.headers.origin;\n  if(origin){\n    res.setHeader('Access-Control-Allow-Origin', origin);\n  }\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\n\napp.get('/:id', async function(request, response) {\n  try {\n    const results = await getAlbum(request.params.id)\n    response.json(results);\n  }\n  catch(e) {\n    response.status(500) \n  }\n});\n\n// listen for requests :)\nconst listener = app.listen(process.env.PORT, function() {\n  console.log('Your app is listening on port ' + listener.address().port);\n});\n\n// END\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}